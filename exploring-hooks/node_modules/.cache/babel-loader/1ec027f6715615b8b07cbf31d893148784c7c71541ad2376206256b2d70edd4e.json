{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/PostPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Routes, Route, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport NotFound from \"./NotFound\";\nimport Loader from \"./Loader\";\nimport mapping from \"../mapping.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [data2, setData2] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const baseURL = `https://jsonplaceholder.typicode.com/posts/${id}`;\n  const baseURL2 = `https://jsonplaceholder.typicode.com/posts/${id}/comments`;\n  const [post, setPost] = React.useState([]);\n  const [comments, setComments] = React.useState([]);\n  const image = mapping.filter(_ref => {\n    let {\n      postId\n    } = _ref;\n    return postId === post.id;\n  });\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setLoader(true);\n      await axios.get(baseURL).then(response => {\n        setPost(response.data);\n      }).catch(e => setError(\"error\"));\n      setLoader(false);\n    };\n    fetchData();\n  }, []);\n  React.useEffect(() => {\n    const fetchComments = async () => {\n      setLoader(true);\n      await axios.get(baseURL2).then(response => {\n        setComments(response.data);\n      }).catch(e => setError(\"error\"));\n      setLoader(false);\n    };\n    if (post) {\n      fetchComments();\n    }\n  }, [post]);\n  if (error) return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n  if (!post) return null;\n  return loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titrePostPage\",\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autourImgPostPage\",\n      children: image.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imgPostPage\",\n        src: image[0].image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bodyPostPage\",\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments ? comments.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carteComment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titreEtBodyComment\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"titreComment\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bodyComment\",\n              children: item.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"ES7UoevPtsXU5qUJL2y3xghZguo=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useState","Routes","Route","useParams","axios","React","NotFound","Loader","mapping","PostPage","id","data2","setData2","error","setError","loader","setLoader","baseURL","baseURL2","post","setPost","comments","setComments","image","filter","postId","useEffect","fetchData","get","then","response","data","catch","e","fetchComments","title","length","body","map","item","name"],"sources":["/usr/src/app/src/components/PostPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport NotFound from \"./NotFound\";\r\nimport Loader from \"./Loader\";\r\nimport mapping from \"../mapping.json\";\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n  const [data2, setData2] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const baseURL = `https://jsonplaceholder.typicode.com/posts/${id}`;\r\n\r\n  const baseURL2 = `https://jsonplaceholder.typicode.com/posts/${id}/comments`;\r\n\r\n  const [post, setPost] = React.useState([]);\r\n\r\n  const [comments, setComments] = React.useState([]);\r\n\r\n  const image = mapping.filter(({ postId }) => postId === post.id);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoader(true);\r\n      await axios\r\n        .get(baseURL)\r\n        .then((response) => {\r\n          setPost(response.data);\r\n        })\r\n        .catch((e) => setError(\"error\"));\r\n      setLoader(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const fetchComments = async () => {\r\n      setLoader(true);\r\n      await axios\r\n        .get(baseURL2)\r\n        .then((response) => {\r\n          setComments(response.data);\r\n        })\r\n        .catch((e) => setError(\"error\"));\r\n      setLoader(false);\r\n    };\r\n\r\n    if (post) {\r\n      fetchComments();\r\n    }\r\n  }, [post]);\r\n\r\n  if (error)\r\n    return (\r\n      <Routes>\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    );\r\n\r\n  if (!post) return null;\r\n\r\n  return loader ? (\r\n    <Loader />\r\n  ) : (\r\n    <div className=\"postPage\">\r\n      <h1 className=\"titrePostPage\">{post.title}</h1>\r\n      <div className=\"autourImgPostPage\">\r\n        {image.length > 0 ? (\r\n          <img className=\"imgPostPage\" src={image[0].image} />\r\n        ) : null}\r\n      </div>\r\n      <p className=\"bodyPostPage\">{post.body}</p>\r\n      <div>\r\n        <div>\r\n          {comments\r\n            ? comments.map((item) => (\r\n                <div className=\"carteComment\" key={item.name}>\r\n                  <div className=\"strip\"></div>\r\n                  <div className=\"titreEtBodyComment\">\r\n                    <h2 className=\"titreComment\">{item.name}</h2>\r\n                    <p className=\"bodyComment\">{item.body}</p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}